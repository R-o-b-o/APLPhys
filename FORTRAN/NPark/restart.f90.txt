! NMDC
! A code for molecular dynamics using a Nose-Poincare thermostat and 
! an Andersen barostat.
!
! N Park
! AWE Aldermaston, Reading, Berks
! RCS data
! $Id: setup.f90,v 1.17 2005/05/06 10:53:31 gnpk Exp gnpk $


MODULE restart

  USE kind_mod
  IMPLICIT NONE

  PRIVATE

  PUBLIC Write_Restart, Read_Restart

CONTAINS

  INTEGER FUNCTION Write_Restart(pos, mom, bounds, H0, step_number)

    IMPLICIT NONE

    REAL(kind=DBL), DIMENSION(:,:), INTENT(in) :: pos
    REAL(kind=DBL), DIMENSION(:,:), INTENT(in) :: mom
    REAL(kind=DBL), DIMENSION(:,:), INTENT(in) :: bounds
    REAL(kind=DBL), INTENT(in) :: H0
    INTEGER, INTENT(in) :: step_number

    CHARACTER(len=25) :: filename
    INTEGER :: ierr, funit

    funit = 29

    filename = "restart."
    WRITE(filename(9:23), "(i15)") step_number
    WRITE(efile,999) "# Writing restart data to ", filename

    OPEN(unit=funit, file=filename, form="unformatted", status="replace", iostat=ierr)
    IF(ierr.NE.0) THEN
       CALL error("error opening restart write")
    END IF

    WRITE(funit) H0
    WRITE(funit) bounds
    WRITE(funit) pos
    WRITE(funit) mom

    CLOSE(funit)



999 FORMAT(A36, A40)

  END FUNCTION Write_Restart






  INTEGER FUNCTION Read_Restart(pos, mom, bounds, H0, step_number)

    IMPLICIT NONE

    REAL(kind=DBL), DIMENSION(:,:), INTENT(out) :: pos
    REAL(kind=DBL), DIMENSION(:,:), INTENT(out) :: mom
    REAL(kind=DBL), DIMENSION(:,:), INTENT(out) :: bounds
    REAL(kind=DBL), INTENT(out) :: H0
    INTEGER, INTENT(out) :: step_number

    CHARACTER(len=25) :: filename
    INTEGER :: ierr, funit

    funit=29

    filename = "restart."
    WRITE(filename(9:23), "(i15)") step_number
    WRITE(efile,999) "# Reading restart data from ", filename

    OPEN(unit=funit, file=filename, form="unformatted", status="old", iostat=ierr)
    IF(ierr.NE.0) THEN
       CALL error("error opening restart read")
    END IF


    READ(funit) H0
    READ(funit) bounds
    READ(funit) pos
    READ(funit) mom

    CLOSE(funit)

999 FORMAT(A36, A40)

  END FUNCTION Read_Restart





END MODULE restart
